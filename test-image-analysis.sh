#!/bin/bash

# =============================================================================
# Script de Test - Analyse d'Images avec OpenAI Vision
# =============================================================================
# Ce script teste si votre configuration OpenAI fonctionne correctement
# =============================================================================

echo "üß™ Test d'Analyse d'Images - √âvaluateur de Collection Pro"
echo "=========================================================="
echo ""

# Couleurs pour output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# V√©rifier si .dev.vars existe
if [ ! -f .dev.vars ]; then
    echo -e "${RED}‚ùå Fichier .dev.vars non trouv√©${NC}"
    echo ""
    echo "Cr√©ez le fichier .dev.vars avec votre cl√© OpenAI :"
    echo "  OPENAI_API_KEY=sk-proj-VOTRE_CLE_ICI"
    echo ""
    exit 1
fi

# V√©rifier si la cl√© OpenAI est configur√©e
OPENAI_KEY=$(grep "OPENAI_API_KEY=" .dev.vars | cut -d '=' -f 2)

if [ -z "$OPENAI_KEY" ] || [ "$OPENAI_KEY" == "REMPLACER_PAR_VOTRE_CLE" ]; then
    echo -e "${RED}‚ùå Cl√© OpenAI non configur√©e dans .dev.vars${NC}"
    echo ""
    echo "√âtapes √† suivre :"
    echo "  1. Aller sur https://platform.openai.com/api-keys"
    echo "  2. Cr√©er une nouvelle cl√© API"
    echo "  3. Copier la cl√© dans .dev.vars"
    echo ""
    exit 1
fi

echo -e "${GREEN}‚úÖ Fichier .dev.vars trouv√©${NC}"
echo -e "${GREEN}‚úÖ Cl√© OpenAI configur√©e${NC}"
echo ""

# V√©rifier si le serveur local est lanc√©
echo "üîç V√©rification du serveur local..."

if ! curl -s http://localhost:3000 > /dev/null 2>&1; then
    echo -e "${YELLOW}‚ö†Ô∏è  Serveur local non d√©marr√©${NC}"
    echo ""
    echo "D√©marrez le serveur avec : npm run dev"
    echo "Puis relancez ce script"
    echo ""
    exit 1
fi

echo -e "${GREEN}‚úÖ Serveur local actif sur http://localhost:3000${NC}"
echo ""

# Test 1: Analyse par texte (simple)
echo "üìù Test 1: Analyse par texte simple..."
echo "--------------------------------------"

RESPONSE=$(curl -s -X POST http://localhost:3000/api/smart-evaluate \
  -H "Content-Type: application/json" \
  -d '{"text_input":"Abbey Road The Beatles"}')

if echo "$RESPONSE" | grep -q "success"; then
    echo -e "${GREEN}‚úÖ Test texte r√©ussi${NC}"
    echo "R√©ponse (extrait) :"
    echo "$RESPONSE" | head -n 5
else
    echo -e "${RED}‚ùå Test texte √©chou√©${NC}"
    echo "R√©ponse :"
    echo "$RESPONSE"
fi

echo ""

# Test 2: Analyse avanc√©e multi-expert
echo "üß† Test 2: Analyse multi-expert avanc√©e..."
echo "-------------------------------------------"

RESPONSE=$(curl -s -X POST http://localhost:3000/api/advanced-analysis \
  -H "Content-Type: application/json" \
  -d '{"text_input":"First Edition Great Gatsby 1925"}')

if echo "$RESPONSE" | grep -q "success\|consensus"; then
    echo -e "${GREEN}‚úÖ Test multi-expert r√©ussi${NC}"
    echo "R√©ponse (extrait) :"
    echo "$RESPONSE" | head -n 5
else
    echo -e "${RED}‚ùå Test multi-expert √©chou√©${NC}"
    echo "R√©ponse :"
    echo "$RESPONSE"
fi

echo ""

# Test 3: Analyse d'image (si URL fournie)
echo "üì∏ Test 3: Analyse d'image..."
echo "-------------------------------"
echo ""
echo "Pour tester l'analyse d'image, vous avez 2 options :"
echo ""
echo "Option A - Interface Web (Recommand√©e) :"
echo "  1. Ouvrir http://localhost:3000 dans votre navigateur"
echo "  2. Section 'üì∏ √âvaluation par Image/Vid√©o'"
echo "  3. Cliquer 'S√©lectionner Image'"
echo "  4. Choisir une photo d'objet de collection"
echo "  5. Cliquer 'Analyser avec IA'"
echo ""
echo "Option B - API avec URL d'image :"
echo "  curl -X POST http://localhost:3000/api/smart-evaluate \\"
echo '    -H "Content-Type: application/json" \'
echo '    -d '"'"'{"imageUrl":"https://votre-url-image.jpg"}'"'"
echo ""

# Test 4: V√©rifier les stats
echo "üìä Test 4: R√©cup√©ration des statistiques..."
echo "---------------------------------------------"

STATS=$(curl -s http://localhost:3000/api/stats)

if echo "$STATS" | grep -q "success\|total_items"; then
    echo -e "${GREEN}‚úÖ API stats fonctionnelle${NC}"
    echo "Stats :"
    echo "$STATS" | head -n 10
else
    echo -e "${YELLOW}‚ö†Ô∏è  Stats retournent des valeurs par d√©faut (normal en mode d√©mo)${NC}"
fi

echo ""
echo "=========================================================="
echo "üéâ Tests termin√©s !"
echo "=========================================================="
echo ""
echo "Prochaines √©tapes :"
echo "  1. Ouvrir http://localhost:3000 dans votre navigateur"
echo "  2. Tester l'upload d'une vraie image"
echo "  3. V√©rifier les r√©sultats de l'analyse IA"
echo ""
echo "Pour voir les logs d√©taill√©s :"
echo "  - Consulter la console o√π tourne 'npm run dev'"
echo "  - Chercher : 'üß† D√©marrage analyse multi-expert...'"
echo ""
echo "Documentation compl√®te : QUICKSTART.md"
echo ""
